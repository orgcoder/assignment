{"version":3,"sources":["assets/logo_white.svg","assets/logo.svg","Logo.js","network/networkRequests.js","components/ExampleA.js","components/ExampleB.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Image","styled","div","logo_white","logo","Component","plainGetRequest","url","headers","submitGetRequest","Error","myHeaders","Headers","Promise","resolve","reject","fetch","method","then","response","ok","json","catch","error","status","statusText","statusCode","getComparisonById","id","a","resourceURL","resourceMetaData","statementsURL","statementsData","hasURL","hashResult","hashIdRequest","data","comparisonDataURL","comparisonData","getPaperById","ExampleA","props","getData","dataFrame","setState","requestedData","loading","renderData","authorStatements","state","content","filter","item","predicate","label","contributions","length","map","object","renderComparisonTable","style","width","overflow","display","borderTop","borderBottom","whiteSpace","textOverflow","borderRight","borderLeft","padding","properties","property","active","key","Object","keys","border","maxWidth","contributionLabel","paperId","createRows","rowId","dataValues","val","this","className","color","href","icon","faSpinner","spin","ExampleB","doiStatement","doiValue","App","githubRepoURL","Container","fluid","noGutters","backgroundColor","marginLeft","marginRight","height","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.fa8731d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_white.33dbdd01.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.33dbdd01.svg\";","import React, { Component } from 'react';\nimport logo_white from 'assets/logo_white.svg';\nimport logo from 'assets/logo.svg';\nimport styled from 'styled-components';\nconst Image = styled.div`\n    height: 45px;\n    width: 120px;\n    background-image: url('${logo_white}');\n    background-size: contain;\n    background-repeat: no-repeat;\n    -webkit-transition: background-image 0.2s ease-in-out;\n    transition: background-image 0.2s ease-in-out;\n    &:hover {\n        background-image: url('${logo}');\n    }\n`;\n\nexport default class Logo extends Component {\n    render() {\n        return (\n            <div style={{ display: 'inline-block', position: 'relative' }}>\n                <Image src={logo_white} alt=\"ORKG Logo\" style={{ height: 45 }} />\n            </div>\n        );\n    }\n}\n","export const plainGetRequest = (url, headers) => {\n    return submitGetRequest(url, headers);\n};\n\nexport const submitGetRequest = (url, headers, send_token = false) => {\n    if (!url) {\n        throw new Error('Cannot submit GET request. URL is null or undefined.');\n    }\n    const myHeaders = headers ? new Headers(headers) : {};\n\n    return new Promise((resolve, reject) => {\n        fetch(url, {\n            method: 'GET',\n            headers: myHeaders\n        })\n            .then(response => {\n                if (!response.ok) {\n                    reject({\n                        error: new Error(`Error response. (${response.status}) ${response.statusText}`),\n                        statusCode: response.status,\n                        statusText: response.statusText\n                    });\n                } else {\n                    const json = response.json();\n                    if (json.then) {\n                        json.then(resolve).catch(reject);\n                    } else {\n                        return resolve(json);\n                    }\n                }\n            })\n            .catch(reject);\n    });\n};\n\nexport const getComparisonById = async id => {\n    const resourceURL = `https://www.orkg.org/orkg/api/resources/${id}/`;\n    const resourceMetaData = await plainGetRequest(resourceURL);\n\n    const statementsURL = `https://www.orkg.org/orkg/api/statements/subject/${id}/`;\n    const statementsData = await plainGetRequest(statementsURL);\n\n    // get the comparison data\n    const hasURL = `https://www.orkg.org/orkg/simcomp/visualization/?resourceId=${id}`;\n    const hashResult = await plainGetRequest(hasURL);\n    const hashIdRequest = hashResult.data.url;\n\n    const comparisonDataURL = `https://www.orkg.org/orkg/simcomp/compare/${hashIdRequest}`;\n    const comparisonData = await plainGetRequest(comparisonDataURL);\n\n    return {\n        resourceMetaData,\n        statementsData,\n        comparisonData\n    };\n};\n\nexport const getPaperById = async id => {\n    const resourceURL = `https://www.orkg.org/orkg/api/resources/${id}/`;\n    const resourceMetaData = await plainGetRequest(resourceURL);\n\n    const statementsURL = `https://www.orkg.org/orkg/api/statements/subject/${id}/`;\n    const statementsData = await plainGetRequest(statementsURL);\n    return {\n        resourceMetaData,\n        statementsData\n    };\n};\n","import React, { Component } from 'react';\nimport './visWidgetConfig.css';\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { getComparisonById } from 'network/networkRequests';\n\nclass ExampleA extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            requestedData: null\n        };\n    }\n\n    componentDidMount() {\n        // fetch data\n        this.getData();\n    }\n\n    getData = () => {\n        getComparisonById('R44930').then(dataFrame => {\n            this.setState({ requestedData: dataFrame, loading: false });\n        });\n    };\n\n    renderData = () => {\n        // create an authors array;\n        const authorStatements = this.state.requestedData.statementsData.content.filter(item => item.predicate.id === 'P27');\n\n        if (!this.state.requestedData) {\n            return <div>Some error</div>;\n        } else {\n            return (\n                <div>\n                    <div>\n                        Title: <b>{this.state.requestedData.resourceMetaData.label}</b>; Number of contributions:{' '}\n                        <b>{this.state.requestedData.comparisonData.contributions.length}</b>\n                    </div>\n                    <div>\n                        Authors:{' '}\n                        {authorStatements.map(item => {\n                            return item.object.label + '; ';\n                        })}\n                    </div>\n                    <div>Comparison Data:</div>\n                    {this.renderComparisonTable()}\n                </div>\n            );\n        }\n    };\n\n    renderComparisonTable = () => {\n        const dataFrame = this.state.requestedData.comparisonData;\n        return (\n            <table style={{ width: '100%', overflow: 'auto', display: 'block' }}>\n                {/*  define headers*/}\n                <thead style={{ borderTop: '1px solid black', borderBottom: '1px solid black' }}>\n                    <tr>\n                        <th\n                            style={{\n                                whiteSpace: 'nowrap',\n                                overflow: 'hidden',\n                                textOverflow: 'ellipsis',\n                                borderRight: '1px solid black',\n                                borderLeft: '1px solid black',\n                                padding: '3px'\n                            }}\n                        >\n                            Contribution\n                        </th>\n                        {dataFrame.properties\n                            .filter(property => property.active === true)\n                            .map(property => {\n                                return (\n                                    <th\n                                        key={property.label}\n                                        style={{\n                                            whiteSpace: 'nowrap',\n                                            overflow: 'hidden',\n                                            textOverflow: 'ellipsis',\n                                            borderRight: '1px solid black',\n                                            padding: '3px'\n                                        }}\n                                    >\n                                        {property.label}\n                                    </th>\n                                );\n                            })}\n                    </tr>\n                </thead>\n                <tbody>\n                    {Object.keys(dataFrame.data).map((data, id) => {\n                        return (\n                            <tr key={'tr_id' + id} style={{ border: '1px solid black', borderTop: 'none' }}>\n                                <td\n                                    key={'td_id_' + id}\n                                    style={{\n                                        whiteSpace: 'nowrap',\n                                        overflow: 'hidden',\n                                        textOverflow: 'ellipsis',\n                                        borderRight: '1px solid black',\n                                        borderLeft: '1px solid black',\n                                        padding: '3px',\n                                        maxWidth: '200px'\n                                    }}\n                                >\n                                    {dataFrame.contributions[id].contributionLabel +\n                                        '(' +\n                                        dataFrame.contributions[id].id +\n                                        '/' +\n                                        dataFrame.contributions[id].paperId +\n                                        ')'}\n                                </td>\n                                {this.createRows(id)}\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </table>\n        );\n    };\n\n    createRows = rowId => {\n        // property filtering\n        const dataFrame = this.state.requestedData.comparisonData;\n        const activeProperties = dataFrame.properties.filter(property => property.active === true);\n        return activeProperties.map(property => {\n            const dataValues = dataFrame.data[property.id][rowId];\n            return (\n                <td\n                    key={'td_id' + rowId + '_' + property.id}\n                    style={{\n                        whiteSpace: 'nowrap',\n                        overflow: 'hidden',\n                        textOverflow: 'ellipsis',\n                        borderRight: '1px solid black',\n                        padding: '3px',\n                        maxWidth: '200px'\n                    }}\n                >\n                    {dataValues.map(val => {\n                        return val.label + ' ';\n                    })}\n                </td>\n            );\n        });\n    };\n\n    /** Component Rendering Function **/\n    render() {\n        return (\n            <div>\n                <div className={'headerStyle'}>\n                    Example A: Comparisons{' '}\n                    <a style={{ color: '#e86161' }} href=\"https://www.orkg.org/orkg/comparison/R44930\">\n                        COVID-19 Reproductive Number Estimates\n                    </a>\n                </div>\n                <div className={'bodyStyle'}>\n                    {this.state.loading && (\n                        <h2 className=\"h5\">\n                            <span>\n                                <Icon icon={faSpinner} spin />\n                            </span>{' '}\n                            Loading ...\n                        </h2>\n                    )}\n                    {!this.state.loading && this.renderData()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ExampleA;\n","import React, { Component } from 'react';\nimport './visWidgetConfig.css';\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { getPaperById } from '../network/networkRequests';\n\nclass ExampleB extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true\n        };\n    }\n\n    componentDidMount() {\n        // fetch data\n        this.getData();\n    }\n\n    getData = () => {\n        getPaperById('R8186').then(dataFrame => {\n            this.setState({ requestedData: dataFrame, loading: false });\n        });\n    };\n\n    renderData = () => {\n        // create an authors array;\n        const authorStatements = this.state.requestedData.statementsData.content.filter(item => item.predicate.id === 'P27');\n        const doiStatement = this.state.requestedData.statementsData.content.filter(item => item.predicate.id === 'P26');\n        let doiValue = '';\n        if (doiStatement[0] && doiStatement[0].object) {\n            doiValue = doiStatement[0].object.label;\n        }\n        if (!this.state.requestedData) {\n            return <div>Some error</div>;\n        } else {\n            return (\n                <div>\n                    <div>\n                        Title: <b>{this.state.requestedData.resourceMetaData.label}</b>;\n                    </div>\n                    <div>\n                        Authors:{' '}\n                        {authorStatements.map(item => {\n                            return item.object.label + '; ';\n                        })}\n                    </div>\n                    <div>Paper Data:</div>\n                    <div>Paper doi: {doiValue}</div>\n                </div>\n            );\n        }\n    };\n\n    /** Component Rendering Function **/\n    render() {\n        return (\n            <div>\n                <div className={'headerStyle'}>\n                    Example B: Paper{' '}\n                    <a style={{ color: '#e86161' }} href=\"https://www.orkg.org/orkg/paper/R8186\">\n                        Open Research Knowledge Graph: Next Generation Infrastructure for Semantic Scholarly Knowledge\n                    </a>\n                </div>\n                <div className={'bodyStyle'}>\n                    {this.state.loading && (\n                        <h2 className=\"h5\">\n                            <span>\n                                <Icon icon={faSpinner} spin />\n                            </span>{' '}\n                            Loading ...\n                        </h2>\n                    )}\n                    {!this.state.loading && this.renderData()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ExampleB;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Tippy from '@tippyjs/react';\nimport 'tippy.js/dist/tippy.css';\nimport { FaGithub, FaGitlab } from 'react-icons/fa';\nimport Logo from './Logo';\nimport { Container } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ExampleA from 'components/ExampleA';\nimport ExampleB from 'components/ExampleB';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.githubRepoURL = '#CHANGE ME';\n    }\n\n    render() {\n        return (\n            <>\n               \n                <Container fluid noGutters>\n                    <Container\n                        style={{\n                            backgroundColor: '#9c9c9c',\n                            marginLeft: '10%',\n                            marginRight: '10%',\n                            maxWidth: '80%',\n                            height: 'calc(100vh - 40px)',\n                            overflow: 'auto'\n                        }}\n                    >\n                        <ExampleA />\n                        <ExampleB />\n                    </Container>\n                </Container>\n            </>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}