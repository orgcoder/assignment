{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\pages-template\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\pages-template\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";export var plainGetRequest=function plainGetRequest(url,headers){return submitGetRequest(url,headers);};export var submitGetRequest=function submitGetRequest(url,headers){var send_token=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;if(!url){throw new Error('Cannot submit GET request. URL is null or undefined.');}var myHeaders=headers?new Headers(headers):{};return new Promise(function(resolve,reject){fetch(url,{method:'GET',headers:myHeaders}).then(function(response){if(!response.ok){reject({error:new Error(\"Error response. (\".concat(response.status,\") \").concat(response.statusText)),statusCode:response.status,statusText:response.statusText});}else{var json=response.json();if(json.then){json.then(resolve).catch(reject);}else{return resolve(json);}}}).catch(reject);});};export var getComparisonById=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id){var resourceURL,resourceMetaData,statementsURL,statementsData,hasURL,hashResult,hashIdRequest,comparisonDataURL,comparisonData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:resourceURL=\"https://www.orkg.org/orkg/api/resources/\".concat(id,\"/\");_context.next=3;return plainGetRequest(resourceURL);case 3:resourceMetaData=_context.sent;statementsURL=\"https://www.orkg.org/orkg/api/statements/subject/\".concat(id,\"/\");_context.next=7;return plainGetRequest(statementsURL);case 7:statementsData=_context.sent;// get the comparison data\nhasURL=\"https://www.orkg.org/orkg/simcomp/visualization/?resourceId=\".concat(id);_context.next=11;return plainGetRequest(hasURL);case 11:hashResult=_context.sent;hashIdRequest=hashResult.data.url;comparisonDataURL=\"https://www.orkg.org/orkg/simcomp/compare/\".concat(hashIdRequest);_context.next=16;return plainGetRequest(comparisonDataURL);case 16:comparisonData=_context.sent;return _context.abrupt(\"return\",{resourceMetaData:resourceMetaData,statementsData:statementsData,comparisonData:comparisonData});case 18:case\"end\":return _context.stop();}}},_callee);}));return function getComparisonById(_x){return _ref.apply(this,arguments);};}();export var getPaperById=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id){var resourceURL,resourceMetaData,statementsURL,statementsData;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:resourceURL=\"https://www.orkg.org/orkg/api/resources/\".concat(id,\"/\");_context2.next=3;return plainGetRequest(resourceURL);case 3:resourceMetaData=_context2.sent;statementsURL=\"https://www.orkg.org/orkg/api/statements/subject/\".concat(id,\"/\");_context2.next=7;return plainGetRequest(statementsURL);case 7:statementsData=_context2.sent;return _context2.abrupt(\"return\",{resourceMetaData:resourceMetaData,statementsData:statementsData});case 9:case\"end\":return _context2.stop();}}},_callee2);}));return function getPaperById(_x2){return _ref2.apply(this,arguments);};}();","map":{"version":3,"sources":["C:/pages-template/src/network/networkRequests.js"],"names":["plainGetRequest","url","headers","submitGetRequest","send_token","Error","myHeaders","Headers","Promise","resolve","reject","fetch","method","then","response","ok","error","status","statusText","statusCode","json","catch","getComparisonById","id","resourceURL","resourceMetaData","statementsURL","statementsData","hasURL","hashResult","hashIdRequest","data","comparisonDataURL","comparisonData","getPaperById"],"mappings":"yRAAA,MAAO,IAAMA,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,GAAD,CAAMC,OAAN,CAAkB,CAC7C,MAAOC,CAAAA,gBAAgB,CAACF,GAAD,CAAMC,OAAN,CAAvB,CACH,CAFM,CAIP,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACF,GAAD,CAAMC,OAAN,CAAsC,IAAvBE,CAAAA,UAAuB,2DAAV,KAAU,CAClE,GAAI,CAACH,GAAL,CAAU,CACN,KAAM,IAAII,CAAAA,KAAJ,CAAU,sDAAV,CAAN,CACH,CACD,GAAMC,CAAAA,SAAS,CAAGJ,OAAO,CAAG,GAAIK,CAAAA,OAAJ,CAAYL,OAAZ,CAAH,CAA0B,EAAnD,CAEA,MAAO,IAAIM,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCC,KAAK,CAACV,GAAD,CAAM,CACPW,MAAM,CAAE,KADD,CAEPV,OAAO,CAAEI,SAFF,CAAN,CAAL,CAIKO,IAJL,CAIU,SAAAC,QAAQ,CAAI,CACd,GAAI,CAACA,QAAQ,CAACC,EAAd,CAAkB,CACdL,MAAM,CAAC,CACHM,KAAK,CAAE,GAAIX,CAAAA,KAAJ,4BAA8BS,QAAQ,CAACG,MAAvC,cAAkDH,QAAQ,CAACI,UAA3D,EADJ,CAEHC,UAAU,CAAEL,QAAQ,CAACG,MAFlB,CAGHC,UAAU,CAAEJ,QAAQ,CAACI,UAHlB,CAAD,CAAN,CAKH,CAND,IAMO,CACH,GAAME,CAAAA,IAAI,CAAGN,QAAQ,CAACM,IAAT,EAAb,CACA,GAAIA,IAAI,CAACP,IAAT,CAAe,CACXO,IAAI,CAACP,IAAL,CAAUJ,OAAV,EAAmBY,KAAnB,CAAyBX,MAAzB,EACH,CAFD,IAEO,CACH,MAAOD,CAAAA,OAAO,CAACW,IAAD,CAAd,CACH,CACJ,CACJ,CAnBL,EAoBKC,KApBL,CAoBWX,MApBX,EAqBH,CAtBM,CAAP,CAuBH,CA7BM,CA+BP,MAAO,IAAMY,CAAAA,iBAAiB,0FAAG,iBAAMC,EAAN,iPACvBC,WADuB,mDACkCD,EADlC,4BAEEvB,CAAAA,eAAe,CAACwB,WAAD,CAFjB,QAEvBC,gBAFuB,eAIvBC,aAJuB,4DAI6CH,EAJ7C,4BAKAvB,CAAAA,eAAe,CAAC0B,aAAD,CALf,QAKvBC,cALuB,eAO7B;AACMC,MARuB,uEAQiDL,EARjD,yBASJvB,CAAAA,eAAe,CAAC4B,MAAD,CATX,SASvBC,UATuB,eAUvBC,aAVuB,CAUPD,UAAU,CAACE,IAAX,CAAgB9B,GAVT,CAYvB+B,iBAZuB,qDAY0CF,aAZ1C,yBAaA9B,CAAAA,eAAe,CAACgC,iBAAD,CAbf,SAavBC,cAbuB,+CAetB,CACHR,gBAAgB,CAAhBA,gBADG,CAEHE,cAAc,CAAdA,cAFG,CAGHM,cAAc,CAAdA,cAHG,CAfsB,yDAAH,kBAAjBX,CAAAA,iBAAiB,4CAAvB,CAsBP,MAAO,IAAMY,CAAAA,YAAY,2FAAG,kBAAMX,EAAN,oLAClBC,WADkB,mDACuCD,EADvC,6BAEOvB,CAAAA,eAAe,CAACwB,WAAD,CAFtB,QAElBC,gBAFkB,gBAIlBC,aAJkB,4DAIkDH,EAJlD,6BAKKvB,CAAAA,eAAe,CAAC0B,aAAD,CALpB,QAKlBC,cALkB,iDAMjB,CACHF,gBAAgB,CAAhBA,gBADG,CAEHE,cAAc,CAAdA,cAFG,CANiB,0DAAH,kBAAZO,CAAAA,YAAY,8CAAlB","sourcesContent":["export const plainGetRequest = (url, headers) => {\n    return submitGetRequest(url, headers);\n};\n\nexport const submitGetRequest = (url, headers, send_token = false) => {\n    if (!url) {\n        throw new Error('Cannot submit GET request. URL is null or undefined.');\n    }\n    const myHeaders = headers ? new Headers(headers) : {};\n\n    return new Promise((resolve, reject) => {\n        fetch(url, {\n            method: 'GET',\n            headers: myHeaders\n        })\n            .then(response => {\n                if (!response.ok) {\n                    reject({\n                        error: new Error(`Error response. (${response.status}) ${response.statusText}`),\n                        statusCode: response.status,\n                        statusText: response.statusText\n                    });\n                } else {\n                    const json = response.json();\n                    if (json.then) {\n                        json.then(resolve).catch(reject);\n                    } else {\n                        return resolve(json);\n                    }\n                }\n            })\n            .catch(reject);\n    });\n};\n\nexport const getComparisonById = async id => {\n    const resourceURL = `https://www.orkg.org/orkg/api/resources/${id}/`;\n    const resourceMetaData = await plainGetRequest(resourceURL);\n\n    const statementsURL = `https://www.orkg.org/orkg/api/statements/subject/${id}/`;\n    const statementsData = await plainGetRequest(statementsURL);\n\n    // get the comparison data\n    const hasURL = `https://www.orkg.org/orkg/simcomp/visualization/?resourceId=${id}`;\n    const hashResult = await plainGetRequest(hasURL);\n    const hashIdRequest = hashResult.data.url;\n\n    const comparisonDataURL = `https://www.orkg.org/orkg/simcomp/compare/${hashIdRequest}`;\n    const comparisonData = await plainGetRequest(comparisonDataURL);\n\n    return {\n        resourceMetaData,\n        statementsData,\n        comparisonData\n    };\n};\n\nexport const getPaperById = async id => {\n    const resourceURL = `https://www.orkg.org/orkg/api/resources/${id}/`;\n    const resourceMetaData = await plainGetRequest(resourceURL);\n\n    const statementsURL = `https://www.orkg.org/orkg/api/statements/subject/${id}/`;\n    const statementsData = await plainGetRequest(statementsURL);\n    return {\n        resourceMetaData,\n        statementsData\n    };\n};\n"]},"metadata":{},"sourceType":"module"}