{"ast":null,"code":"export const plainGetRequest = (url, headers) => {\n  return submitGetRequest(url, headers);\n};\nexport const submitGetRequest = (url, headers, send_token = false) => {\n  if (!url) {\n    throw new Error('Cannot submit GET request. URL is null or undefined.');\n  }\n\n  const myHeaders = headers ? new Headers(headers) : {};\n  return new Promise((resolve, reject) => {\n    fetch(url, {\n      method: 'GET',\n      headers: myHeaders\n    }).then(response => {\n      if (!response.ok) {\n        reject({\n          error: new Error(`Error response. (${response.status}) ${response.statusText}`),\n          statusCode: response.status,\n          statusText: response.statusText\n        });\n      } else {\n        const json = response.json();\n\n        if (json.then) {\n          json.then(resolve).catch(reject);\n        } else {\n          return resolve(json);\n        }\n      }\n    }).catch(reject);\n  });\n};\nexport const getComparisonById = async id => {\n  const resourceURL = `https://www.orkg.org/orkg/api/resources/${id}/`;\n  const resourceMetaData = await plainGetRequest(resourceURL);\n  const statementsURL = `https://www.orkg.org/orkg/api/statements/subject/${id}/`;\n  const statementsData = await plainGetRequest(statementsURL); // get the comparison data\n\n  const hasURL = `https://www.orkg.org/orkg/simcomp/visualization/?resourceId=${id}`;\n  const hashResult = await plainGetRequest(hasURL);\n  const hashIdRequest = hashResult.data.url;\n  const comparisonDataURL = `https://www.orkg.org/orkg/simcomp/compare/${hashIdRequest}`;\n  const comparisonData = await plainGetRequest(comparisonDataURL);\n  return {\n    resourceMetaData,\n    statementsData,\n    comparisonData\n  };\n};\nexport const getPaperById = async id => {\n  const resourceURL = `https://www.orkg.org/orkg/api/resources/${id}/`;\n  const resourceMetaData = await plainGetRequest(resourceURL);\n  const statementsURL = `https://www.orkg.org/orkg/api/statements/subject/${id}/`;\n  const statementsData = await plainGetRequest(statementsURL);\n  return {\n    resourceMetaData,\n    statementsData\n  };\n};","map":{"version":3,"sources":["C:/data-retrieve-task/src/network/networkRequests.js"],"names":["plainGetRequest","url","headers","submitGetRequest","send_token","Error","myHeaders","Headers","Promise","resolve","reject","fetch","method","then","response","ok","error","status","statusText","statusCode","json","catch","getComparisonById","id","resourceURL","resourceMetaData","statementsURL","statementsData","hasURL","hashResult","hashIdRequest","data","comparisonDataURL","comparisonData","getPaperById"],"mappings":"AAAA,OAAO,MAAMA,eAAe,GAAG,CAACC,GAAD,EAAMC,OAAN,KAAkB;AAC7C,SAAOC,gBAAgB,CAACF,GAAD,EAAMC,OAAN,CAAvB;AACH,CAFM;AAIP,OAAO,MAAMC,gBAAgB,GAAG,CAACF,GAAD,EAAMC,OAAN,EAAeE,UAAU,GAAG,KAA5B,KAAsC;AAClE,MAAI,CAACH,GAAL,EAAU;AACN,UAAM,IAAII,KAAJ,CAAU,sDAAV,CAAN;AACH;;AACD,QAAMC,SAAS,GAAGJ,OAAO,GAAG,IAAIK,OAAJ,CAAYL,OAAZ,CAAH,GAA0B,EAAnD;AAEA,SAAO,IAAIM,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCC,IAAAA,KAAK,CAACV,GAAD,EAAM;AACPW,MAAAA,MAAM,EAAE,KADD;AAEPV,MAAAA,OAAO,EAAEI;AAFF,KAAN,CAAL,CAIKO,IAJL,CAIUC,QAAQ,IAAI;AACd,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AACdL,QAAAA,MAAM,CAAC;AACHM,UAAAA,KAAK,EAAE,IAAIX,KAAJ,CAAW,oBAAmBS,QAAQ,CAACG,MAAO,KAAIH,QAAQ,CAACI,UAAW,EAAtE,CADJ;AAEHC,UAAAA,UAAU,EAAEL,QAAQ,CAACG,MAFlB;AAGHC,UAAAA,UAAU,EAAEJ,QAAQ,CAACI;AAHlB,SAAD,CAAN;AAKH,OAND,MAMO;AACH,cAAME,IAAI,GAAGN,QAAQ,CAACM,IAAT,EAAb;;AACA,YAAIA,IAAI,CAACP,IAAT,EAAe;AACXO,UAAAA,IAAI,CAACP,IAAL,CAAUJ,OAAV,EAAmBY,KAAnB,CAAyBX,MAAzB;AACH,SAFD,MAEO;AACH,iBAAOD,OAAO,CAACW,IAAD,CAAd;AACH;AACJ;AACJ,KAnBL,EAoBKC,KApBL,CAoBWX,MApBX;AAqBH,GAtBM,CAAP;AAuBH,CA7BM;AA+BP,OAAO,MAAMY,iBAAiB,GAAG,MAAMC,EAAN,IAAY;AACzC,QAAMC,WAAW,GAAI,2CAA0CD,EAAG,GAAlE;AACA,QAAME,gBAAgB,GAAG,MAAMzB,eAAe,CAACwB,WAAD,CAA9C;AAEA,QAAME,aAAa,GAAI,oDAAmDH,EAAG,GAA7E;AACA,QAAMI,cAAc,GAAG,MAAM3B,eAAe,CAAC0B,aAAD,CAA5C,CALyC,CAOzC;;AACA,QAAME,MAAM,GAAI,+DAA8DL,EAAG,EAAjF;AACA,QAAMM,UAAU,GAAG,MAAM7B,eAAe,CAAC4B,MAAD,CAAxC;AACA,QAAME,aAAa,GAAGD,UAAU,CAACE,IAAX,CAAgB9B,GAAtC;AAEA,QAAM+B,iBAAiB,GAAI,6CAA4CF,aAAc,EAArF;AACA,QAAMG,cAAc,GAAG,MAAMjC,eAAe,CAACgC,iBAAD,CAA5C;AAEA,SAAO;AACHP,IAAAA,gBADG;AAEHE,IAAAA,cAFG;AAGHM,IAAAA;AAHG,GAAP;AAKH,CApBM;AAsBP,OAAO,MAAMC,YAAY,GAAG,MAAMX,EAAN,IAAY;AACpC,QAAMC,WAAW,GAAI,2CAA0CD,EAAG,GAAlE;AACA,QAAME,gBAAgB,GAAG,MAAMzB,eAAe,CAACwB,WAAD,CAA9C;AAEA,QAAME,aAAa,GAAI,oDAAmDH,EAAG,GAA7E;AACA,QAAMI,cAAc,GAAG,MAAM3B,eAAe,CAAC0B,aAAD,CAA5C;AACA,SAAO;AACHD,IAAAA,gBADG;AAEHE,IAAAA;AAFG,GAAP;AAIH,CAVM","sourcesContent":["export const plainGetRequest = (url, headers) => {\n    return submitGetRequest(url, headers);\n};\n\nexport const submitGetRequest = (url, headers, send_token = false) => {\n    if (!url) {\n        throw new Error('Cannot submit GET request. URL is null or undefined.');\n    }\n    const myHeaders = headers ? new Headers(headers) : {};\n\n    return new Promise((resolve, reject) => {\n        fetch(url, {\n            method: 'GET',\n            headers: myHeaders\n        })\n            .then(response => {\n                if (!response.ok) {\n                    reject({\n                        error: new Error(`Error response. (${response.status}) ${response.statusText}`),\n                        statusCode: response.status,\n                        statusText: response.statusText\n                    });\n                } else {\n                    const json = response.json();\n                    if (json.then) {\n                        json.then(resolve).catch(reject);\n                    } else {\n                        return resolve(json);\n                    }\n                }\n            })\n            .catch(reject);\n    });\n};\n\nexport const getComparisonById = async id => {\n    const resourceURL = `https://www.orkg.org/orkg/api/resources/${id}/`;\n    const resourceMetaData = await plainGetRequest(resourceURL);\n\n    const statementsURL = `https://www.orkg.org/orkg/api/statements/subject/${id}/`;\n    const statementsData = await plainGetRequest(statementsURL);\n\n    // get the comparison data\n    const hasURL = `https://www.orkg.org/orkg/simcomp/visualization/?resourceId=${id}`;\n    const hashResult = await plainGetRequest(hasURL);\n    const hashIdRequest = hashResult.data.url;\n\n    const comparisonDataURL = `https://www.orkg.org/orkg/simcomp/compare/${hashIdRequest}`;\n    const comparisonData = await plainGetRequest(comparisonDataURL);\n\n    return {\n        resourceMetaData,\n        statementsData,\n        comparisonData\n    };\n};\n\nexport const getPaperById = async id => {\n    const resourceURL = `https://www.orkg.org/orkg/api/resources/${id}/`;\n    const resourceMetaData = await plainGetRequest(resourceURL);\n\n    const statementsURL = `https://www.orkg.org/orkg/api/statements/subject/${id}/`;\n    const statementsData = await plainGetRequest(statementsURL);\n    return {\n        resourceMetaData,\n        statementsData\n    };\n};\n"]},"metadata":{},"sourceType":"module"}